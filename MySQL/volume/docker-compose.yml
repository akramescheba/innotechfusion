version: "3.8"

volumes:
  mysql-data:

networks:
  spring-boot-mysql-network:
    name: spring-boot-mysql-network

services:
  mysql-db:
    image: mysql:lts
    ports:
      - "3308:3306"
    environment:
      - MYSQL_DATABASE=innotechdata
      - MYSQL_USER=usr
      - MYSQL_PASSWORD=Pass
      - MYSQL_ROOT_PASSWORD=Pass
    networks:
      - spring-boot-mysql-network
    volumes:
      - mysql-data:/var/lib/mysql
      - ./MySQL/volume:/etc/mysql/conf.d

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      retries: 5
      interval: 3s
      timeout: 30s

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    image: spring-boot/backend:v1
    ports:
      - "8082:8082"
    depends_on:
      mysql-db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/innotechdata
      - SPRING_DATASOURCE_USERNAME=usr
      - SPRING_DATASOURCE_PASSWORD=Pass
    networks:
      - spring-boot-mysql-network

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    image: angular/frontend:v1
    ports:
      - "4200:80"
    expose:
      - 80
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - spring-boot-mysql-network
